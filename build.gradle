buildscript {
    dependencies {
        // TODO(dsanduleac): remove once we apply baseline
        classpath 'com.netflix.nebula:nebula-dependency-recommender:6.0.0'
    }
}

plugins {
    id 'com.jfrog.bintray' version '1.8.4'
    id 'com.gradle.plugin-publish' version '0.9.9'
    id 'com.palantir.configuration-resolver' version '0.2.0'
    id 'com.palantir.git-version' version '0.4.0'
    id 'com.palantir.idea-test-fix' version '0.1.0'
}

apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'java-gradle-plugin'
apply plugin: 'maven-publish'

// TODO(dsanduleac): remove once we apply baseline
apply plugin: 'nebula.dependency-recommender'

// TODO(dsanduleac): remove once we apply baseline
dependencyRecommendations {
    strategy OverrideTransitives
    propertiesFile file: rootProject.file("versions.props")
}

// TODO(dsanduleac): remove once we apply baseline
configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
    }
}

repositories {
    jcenter()
}

dependencies {
    compile gradleApi()
    compile 'org.eclipse.jgit:org.eclipse.jgit'
    compile 'com.google.guava:guava'

    testCompile gradleTestKit()
    testCompile 'junit:junit'
    testCompile 'org.assertj:assertj-core'
    testCompile('org.spockframework:spock-core') {
        exclude module: 'groovy-all'
    }
}

if (System.env.CIRCLE_TEST_REPORTS) {
    test.reports.junitXml.destination = new File(System.env.CIRCLE_TEST_REPORTS, getName())
}

group 'com.palantir.gradle.gitversion'
version gitVersion()
sourceCompatibility = 1.7
targetCompatibility = 1.7

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier 'sources'
}

publishing {
    publications {
        bintray(MavenPublication) {
            from components.java
            artifact(sourceJar)
            artifact(publishPluginJavaDocsJar)
        }
    }
}

tasks.publish {
    dependsOn 'bintrayUpload', 'publishPlugins'
}

bintray {
    user = System.env.BINTRAY_USER
    key = System.env.BINTRAY_KEY
    publish = true
    pkg {
        repo = 'releases'
        name = 'gradle-git-version'
        userOrg = 'palantir'
        licenses = ['Apache-2.0']
        publications = ['bintray']
    }
}

bintrayUpload.dependsOn 'generatePomFileForBintrayPublication', 'sourceJar', 'build'

bintrayUpload.onlyIf {
    System.env.BINTRAY_USER && System.env.BINTRAY_KEY && System.env.CIRCLE_TAG
}

pluginBundle {
    website = 'https://github.com/palantir/gradle-git-version'
    vcsUrl = 'https://github.com/palantir/gradle-git-version'
    description = 'Gradle Git-Version is a plugin that generates a version for use with Gradle by calling git-describe.'
    tags = ['git', 'version']

    plugins {
        gitVersionPlugin {
            id = 'com.palantir.git-version'
            displayName = 'Palantir Gradle Git-Version'
        }
    }
}

publishPlugins.onlyIf {
    System.env.CIRCLE_TAG
}

