buildscript {
    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
        gradlePluginPortal() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }
    dependencies {
        classpath 'com.palantir.gradle.failure-reports:gradle-failure-reports:1.13.0'
        classpath 'com.palantir.gradle.jdks:gradle-jdks:0.48.0'
        classpath 'com.palantir.gradle.jdkslatest:gradle-jdks-latest:0.15.0'
        classpath 'com.palantir.jakartapackagealignment:jakarta-package-alignment:0.6.0'
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.19.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:2.50.0'
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.7.0'
    }
}

plugins {
    id 'com.gradle.plugin-publish' version '1.3.0'
id 'com.palantir.git-version' version '3.1.0'
    id 'com.palantir.idea-test-fix' version '0.1.0'
 id 'com.palantir.baseline' version '5.69.0'
id 'com.palantir.consistent-versions' version '2.25.0'
    id 'java-gradle-plugin'
    id 'groovy'
}
allprojects {
    apply plugin: 'com.palantir.jakarta-package-alignment'
}

apply plugin: 'com.palantir.external-publish-jar'
apply plugin: 'com.palantir.java-format'
apply plugin: 'com.palantir.jdks'
apply plugin: 'com.palantir.jdks.latest'
apply plugin: 'com.palantir.failure-reports'

group 'com.palantir.gradle.gitversion'
version System.env.CIRCLE_TAG ?: gitVersion()

repositories {
    mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
}

sourceSets {
    groovy
    main.output.dir groovy.output
}

dependencies {
    implementation gradleApi()
    implementation 'com.google.guava:guava'

    groovyImplementation localGroovy()
    groovyImplementation gradleApi()

    // Access code written in groovy from src/main/java sources
    runtimeOnly configurations.groovyRuntimeClasspath
    implementation configurations.groovyImplementation
    implementation sourceSets.groovy.output

    annotationProcessor 'org.immutables:value'
    compileOnly 'org.immutables:value::annotations'

    testImplementation gradleTestKit()
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core'
    testImplementation('org.spockframework:spock-core') {
        exclude module: 'groovy-all'
    }
}

java {
    sourceCompatibility JavaVersion.VERSION_1_8
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Werror', '-Xlint:deprecation']
}

gradlePlugin {
    website = 'https://github.com/palantir/gradle-git-version'
    vcsUrl = 'https://github.com/palantir/gradle-git-version'

    plugins {
        gitVersionPlugin {
            id = 'com.palantir.git-version'
            displayName = 'Palantir Gradle Git-Version'
            description = 'Gradle Git-Version is a plugin that generates a version for use with Gradle by calling git-describe.'
            tags.set(['git', 'version'])
        }
    }
}

// Configure the publishPlugins task
publishPlugins.onlyIf { System.env.CIRCLE_TAG }
tasks.publish.dependsOn publishPlugins
project.ext.'gradle.publish.key' = System.env["GRADLE_KEY"]
project.ext.'gradle.publish.secret' = System.env["GRADLE_SECRET"]

jdks {
    daemonTarget = 17
}
